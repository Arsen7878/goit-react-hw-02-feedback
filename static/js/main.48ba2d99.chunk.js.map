{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.module.css","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","c","text","FeedbackOptions","options","onLeaveFeedback","map","option","type","name","btn","onClick","shortid","generate","Section","title","children","Notification","message","App","state","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","event","nameBtn","target","setState","prevState","this","keyObject","Object","keys","Component","ReactDOM","render","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,IAAM,+B,mBCAxBD,EAAOC,QAAU,CAAC,MAAQ,yB,mBCA1BD,EAAOC,QAAU,CAAC,KAAO,6B,kBCAzBD,EAAOC,QAAU,CAAC,KAAO,2B,8HCuBVC,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACE,oBAAGC,UAAWC,IAAEC,KAAhB,kBAA4BP,KAC5B,oBAAGK,UAAWC,IAAEC,KAAhB,qBAA+BN,KAC/B,oBAAGI,UAAWC,IAAEC,KAAhB,iBAA2BL,KAC3B,oBAAGG,UAAWC,IAAEC,KAAhB,mBAA6BJ,KAC7B,oBAAGE,UAAWC,IAAEC,KAAhB,gCAA0CH,EAA1C,Y,iCCiBSI,EAvBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,mCACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBAEEC,KAAK,SACLC,KAAMF,EACNP,UAAWC,IAAES,IACbC,QAASN,EALX,SAOGE,GANIK,IAAQC,kB,iBCORC,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,oBAAIhB,UAAWC,IAAEc,MAAjB,SAAyBA,IACxBC,M,iBCQQC,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,mCACE,mBAAGlB,UAAWC,IAAEC,KAAhB,SAAuBgB,OCDvBC,E,4MACJC,MAAQ,CACNzB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPwB,mBAAqB,WACnB,MAA+B,EAAKD,MAEpC,OAFA,EAAQzB,KAAR,EAAcC,QAAd,EAAuBC,K,EAKzByB,gCAAkC,WAChC,MAA+B,EAAKF,MAA5BzB,EAAR,EAAQA,KACFG,EAASH,GAAQA,EADvB,EAAcC,QAAd,EAAuBC,KACyB,IAChD,OAAO0B,KAAKC,MAAM1B,I,EAGpBO,gBAAkB,SAAAoB,GAChB,IAAMC,EAAUD,EAAME,OAAOlB,KAE7B,EAAKmB,UAAS,SAAAC,GAAS,sBACpBH,EAAUG,EAAUH,GAAW,O,4CAIpC,WACE,MAA+BI,KAAKV,MAA5BzB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBkC,EAAYC,OAAOC,KAAKH,KAAKV,OAC7BtB,EAAQgC,KAAKT,qBACbtB,EAAqB+B,KAAKR,kCAEhC,OACE,sBAAKtB,UAAU,MAAf,UACE,cAAC,EAAD,CAASe,MAAM,wBAAf,SACE,cAAC,EAAD,CACEX,QAAS2B,EACT1B,gBAAiByB,KAAKzB,oBAG1B,cAAC,EAAD,CAASU,MAAM,aAAf,SACa,IAAVjB,EACC,cAAC,EAAD,CAAcoB,QAAQ,yBAEtB,cAAC,EAAD,CACEvB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,a,GAlDhBmC,aA2DHf,IC7DfgB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.48ba2d99.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__1O2tq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__kY5tE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__3u1Dz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Statistics_text__1q3aR\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport c from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      <p className={c.text}>Good:{good}</p>\r\n      <p className={c.text}>Neutral:{neutral}</p>\r\n      <p className={c.text}>Bad:{bad}</p>\r\n      <p className={c.text}>Total:{total}</p>\r\n      <p className={c.text}>Positive feedback: {positivePercentage} %</p>\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\nimport c from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <>\r\n      {options.map(option => (\r\n        <button\r\n          key={shortid.generate()}\r\n          type=\"button\"\r\n          name={option}\r\n          className={c.btn}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport c from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h2 className={c.title}>{title}</h2>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport c from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <>\r\n      <p className={c.text}>{message}</p>\r\n    </>\r\n  );\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\r\nimport Statistics from './components/Statistics';\r\nimport FeedbackOptions from './components/FeedbackOptions';\r\nimport Section from './components/Section';\r\nimport Notification from './components/Notification';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = good + neutral + bad;\r\n    return total;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = (good / (good + neutral + bad)) * 100;\r\n    return Math.round(total);\r\n  };\r\n\r\n  onLeaveFeedback = event => {\r\n    const nameBtn = event.target.name;\r\n\r\n    this.setState(prevState => ({\r\n      [nameBtn]: prevState[nameBtn] + 1,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const keyObject = Object.keys(this.state);\r\n    const total = this.countTotalFeedback();\r\n    const positivePercentage = this.countPositiveFeedbackPercentage();\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={keyObject}\r\n            onLeaveFeedback={this.onLeaveFeedback}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          {total === 0 ? (\r\n            <Notification message=\"There is no feedback\" />\r\n          ) : (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={total}\r\n              positivePercentage={positivePercentage}\r\n            />\r\n          )}\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}