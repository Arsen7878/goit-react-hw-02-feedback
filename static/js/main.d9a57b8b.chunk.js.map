{"version":3,"sources":["components/Notification/Notification.module.css","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","App.js","index.js","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","c","text","FeedbackOptions","options","onLeaveFeedback","map","option","type","name","btn","onClick","Section","title","children","Notification","message","App","state","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","event","nameBtn","target","setState","prevState","this","keyObject","Object","keys","Component","ReactDOM","render","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,KAAO,6B,8HCuBVC,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACE,oBAAGC,UAAWC,IAAEC,KAAhB,kBAA4BP,KAC5B,oBAAGK,UAAWC,IAAEC,KAAhB,qBAA+BN,KAC/B,oBAAGI,UAAWC,IAAEC,KAAhB,iBAA2BL,KAC3B,oBAAGG,UAAWC,IAAEC,KAAhB,mBAA6BJ,KAC7B,oBAAGE,UAAWC,IAAEC,KAAhB,gCAA0CH,EAA1C,Y,gBCgBSI,EAvBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,mCACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBAEEC,KAAK,SACLC,KAAMF,EACNP,UAAWC,IAAES,IACbC,QAASN,EALX,SAOGE,GANIA,S,gBCSAK,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,oBAAId,UAAWC,IAAEY,MAAjB,SAAyBA,IACxBC,M,iBCQQC,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,mCACE,mBAAGhB,UAAWC,IAAEC,KAAhB,SAAuBc,OCDvBC,E,4MACJC,MAAQ,CACNvB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPsB,mBAAqB,WACnB,MAA+B,EAAKD,MAEpC,OAFA,EAAQvB,KAAR,EAAcC,QAAd,EAAuBC,K,EAKzBuB,gCAAkC,WAChC,MAA+B,EAAKF,MAA5BvB,EAAR,EAAQA,KACFG,EAASH,GAAQA,EADvB,EAAcC,QAAd,EAAuBC,KACyB,IAChD,OAAOwB,KAAKC,MAAMxB,I,EAGpBO,gBAAkB,SAAAkB,GAChB,IAAMC,EAAUD,EAAME,OAAOhB,KAE7B,EAAKiB,UAAS,SAAAC,GAAS,sBACpBH,EAAUG,EAAUH,GAAW,O,4CAIpC,WACE,MAA+BI,KAAKV,MAA5BvB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBgC,EAAYC,OAAOC,KAAKH,KAAKV,OAC7BpB,EAAQ8B,KAAKT,qBACbpB,EAAqB6B,KAAKR,kCAEhC,OACE,sBAAKpB,UAAU,MAAf,UACE,cAAC,EAAD,CAASa,MAAM,wBAAf,SACE,cAAC,EAAD,CACET,QAASyB,EACTxB,gBAAiBuB,KAAKvB,oBAG1B,cAAC,EAAD,CAASQ,MAAM,aAAf,SACa,IAAVf,EACC,cAAC,EAAD,CAAckB,QAAQ,yBAEtB,cAAC,EAAD,CACErB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,a,GAlDhBiC,aA2DHf,IC7DfgB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U,kBCHjD5C,EAAOC,QAAU,CAAC,KAAO,2B,kBCAzBD,EAAOC,QAAU,CAAC,IAAM,+B,kBCAxBD,EAAOC,QAAU,CAAC,MAAQ,0B","file":"static/js/main.d9a57b8b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__3u1Dz\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport c from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      <p className={c.text}>Good:{good}</p>\r\n      <p className={c.text}>Neutral:{neutral}</p>\r\n      <p className={c.text}>Bad:{bad}</p>\r\n      <p className={c.text}>Total:{total}</p>\r\n      <p className={c.text}>Positive feedback: {positivePercentage} %</p>\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport c from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <>\r\n      {options.map(option => (\r\n        <button\r\n          key={option}\r\n          type=\"button\"\r\n          name={option}\r\n          className={c.btn}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport c from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h2 className={c.title}>{title}</h2>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport c from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <>\r\n      <p className={c.text}>{message}</p>\r\n    </>\r\n  );\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Section from './components/Section';\nimport Notification from './components/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const total = good + neutral + bad;\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good, neutral, bad } = this.state;\n    const total = (good / (good + neutral + bad)) * 100;\n    return Math.round(total);\n  };\n\n  onLeaveFeedback = event => {\n    const nameBtn = event.target.name;\n\n    this.setState(prevState => ({\n      [nameBtn]: prevState[nameBtn] + 1,\n    }));\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const keyObject = Object.keys(this.state);\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <div className=\"App\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={keyObject}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {total === 0 ? (\n            <Notification message=\"There is no feedback\" />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Statistics_text__1q3aR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__1O2tq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__kY5tE\"};"],"sourceRoot":""}